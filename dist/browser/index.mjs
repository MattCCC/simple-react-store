import{useReducer as S,useMemo as x}from"react";import{createContext as P,useContextSelector as p}from"use-context-selector";import{Fragment as g,jsx as u}from"react/jsx-runtime";var T=t=>(r,e)=>({...r,[t]:e});function h(t){let r=Object.assign({},t);return Object.keys(t).forEach(e=>{r[e]=()=>{}}),r}function w(t,r){let e=P([t,h(r)]),o=null;function s(n,c){return{...n,...r[c.type](n,...c.payload)}}function f({children:n}){let[c,i]=S(s,t);return o=x(()=>{let a=Object.assign({},r);return Object.keys(r).forEach(d=>{a[d]=(...l)=>{i({type:d,payload:l})}}),a},[i]),u(e.Provider,{value:[c,o],children:n})}function y(){return p(e,n=>n)}function M(n){return[p(e,i=>i[0][n]),o]}return{Provider:f,useStore:y,useStoreProp:M}}function m(...t){function r({children:e}){let o=e;return t.forEach(({Provider:s})=>{o=u(s,{children:o})}),u(g,{children:o})}return r}var O=(t,r,e,o)=>{let s=e?{...t[o],...e}:r[o]||t[o];return{[o]:s}};export{w as createStore,O as mergeState,T as set,m as useStoreProvider};
//# sourceMappingURL=index.mjs.map