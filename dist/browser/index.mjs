import{useReducer as x,useMemo as P}from"react";import{createContext as S,useContextSelector as p}from"use-context-selector";import{Fragment as g,jsx as u}from"react/jsx-runtime";var T=r=>(o,t)=>({...o,[r]:t});function h(r){let o=Object.assign({},r);return Object.keys(r).forEach(t=>{o[t]=()=>{}}),o}function w(r,o){let t=S([r,h(o)]),e=null;function s(n,c){return{...n,...o[c.type](n,...c.payload)}}function f({children:n}){let[c,i]=x(s,r);return e=P(()=>{let d=Object.assign({},o);return Object.keys(o).forEach(a=>{d[a]=(...l)=>{i({type:a,payload:l})}}),d},[i]),u(t.Provider,{value:[c,e],children:n})}function y(){return p(t,n=>n)}function M(n){return[p(t,i=>i[0][n]),e]}return{Provider:f,useStore:y,useStoreProp:M}}function m(...r){function o({children:t}){let e=t;return r.forEach(({Provider:s})=>{e=u(s,{children:e})}),u(g,{children:e})}return o}var O=(r,o,t,e)=>{let s=e?{...o[r],...e}:t[r]||o[r];return{...t,[r]:s}};export{w as createStore,O as mergeState,T as set,m as useStoreProvider};
//# sourceMappingURL=index.mjs.map