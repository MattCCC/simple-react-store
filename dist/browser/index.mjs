import{useReducer as P,useMemo as x}from"react";import{createContext as h,useContextSelector as f}from"use-context-selector";import{Fragment as A,jsx as i}from"react/jsx-runtime";function O(t){return(e,o)=>({...e,[t]:o})}function v(t){let e=Object.assign({},t);return Object.keys(t).forEach(o=>{e[o]=()=>{}}),e}function m(t,e){let o=[t,v(e)],n=h(o),u=null;function p(r,c){return{...r,...e[c.type](r,...c.payload)}}function S({children:r}){let[c,s]=P(p,t);u=x(()=>{let a=Object.assign({},e);return Object.keys(e).forEach(d=>{a[d]=(...k)=>{s({type:d,payload:k})}}),a},[s]);let y=[c,u];return i(n.Provider,{value:y,children:r})}function l(){return f(n,r=>r)}function M(r){return[f(n,s=>s[0][r]),u]}return{Provider:S,useStore:l,useStoreProp:M}}function W(...t){function e({children:o}){let n=o;return t.forEach(({Provider:u})=>{n=i(u,{children:n})}),i(A,{children:n})}return e}function b(t,e,o,n){return{...o,[t]:{...e[t],...o[t],...n}}}export{m as createStore,b as mergeState,O as set,W as useStoreProvider};
//# sourceMappingURL=index.mjs.map