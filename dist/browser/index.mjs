import{useReducer as P,useMemo as x}from"react";import{createContext as h,useContextSelector as f}from"use-context-selector";import{Fragment as w,jsx as i}from"react/jsx-runtime";function T(t){return(e,o)=>({...e,[t]:o})}function v(t){let e=Object.assign({},t);return Object.keys(t).forEach(o=>{e[o]=()=>{}}),e}function b(t,e){let o=[t,v(e)],n=h(o),c=null;function p(r,s){return{...r,...e[s.type](r,...s.payload)}}function S({children:r}){let[s,u]=P(p,t);c=x(()=>{let a=Object.assign({},e);return Object.keys(e).forEach(d=>{a[d]=(...k)=>{u({type:d,payload:k})}}),a},[u]);let y=[s,c];return i(n.Provider,{value:y,children:r})}function l(){return f(n,r=>r)}function M(r){return[f(n,u=>u[0][r]),c]}return{Provider:S,useStore:l,useStoreProp:M}}function m(...t){function e({children:o}){let n=o;return t.forEach(({Provider:c})=>{n=i(c,{children:n})}),i(w,{children:n})}return e}function W(t,e,o,n){let c=n||o[t]||e[t];return{...o,[t]:c}}export{b as createStore,W as mergeState,T as set,m as useStoreProvider};
//# sourceMappingURL=index.mjs.map